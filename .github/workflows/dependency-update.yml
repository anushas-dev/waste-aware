name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated packages
      run: |
        echo "## 📦 Dependency Status Report" >> dependency-report.md
        echo "" >> dependency-report.md
        echo "Generated on: $(date)" >> dependency-report.md
        echo "" >> dependency-report.md
        
        echo "### Outdated Packages" >> dependency-report.md
        npm outdated --long > outdated.txt || true
        
        if [ -s outdated.txt ]; then
          echo "\`\`\`" >> dependency-report.md
          cat outdated.txt >> dependency-report.md
          echo "\`\`\`" >> dependency-report.md
        else
          echo "✅ All packages are up to date!" >> dependency-report.md
        fi
        
        echo "" >> dependency-report.md
        echo "### Security Audit" >> dependency-report.md
        npm audit --json > audit.json || true
        
        VULNERABILITIES=$(cat audit.json | grep -o '"vulnerabilities":[0-9]*' | cut -d':' -f2)
        if [ "$VULNERABILITIES" = "0" ]; then
          echo "✅ No security vulnerabilities found" >> dependency-report.md
        else
          echo "⚠️ Found $VULNERABILITIES vulnerabilities" >> dependency-report.md
          echo "" >> dependency-report.md
          echo "\`\`\`" >> dependency-report.md
          npm audit >> dependency-report.md 2>/dev/null || true
          echo "\`\`\`" >> dependency-report.md
        fi
        
    - name: Create Issue for Updates
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Check if dependency report exists
          if (!fs.existsSync('dependency-report.md')) {
            console.log('No dependency report generated');
            return;
          }
          
          const report = fs.readFileSync('dependency-report.md', 'utf8');
          
          // Only create issue if there are updates needed
          if (report.includes('✅ All packages are up to date!') && report.includes('✅ No security vulnerabilities found')) {
            console.log('No updates needed');
            return;
          }
          
          const title = `Weekly Dependency Update - ${new Date().toISOString().split('T')[0]}`;
          
          const body = `${report}
          
          ---
          
          This automated report was generated by the dependency update workflow.
          Please review and update packages as needed.
          
          **Recommendations:**
          - Update packages with known security vulnerabilities immediately
          - Test updates in a development branch before merging
          - Check breaking changes in major version updates
          
          /label enhancement, dependencies`;
          
          // Check if similar issue already exists
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'dependencies',
            state: 'open'
          });
          
          const existingIssue = issues.data.find(issue => 
            issue.title.includes('Weekly Dependency Update')
          );
          
          if (existingIssue) {
            // Update existing issue
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: existingIssue.number,
              body: `## Updated Report\n\n${report}`
            });
            console.log(`Updated existing issue #${existingIssue.number}`);
          } else {
            // Create new issue
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['dependencies', 'enhancement']
            });
            console.log(`Created new issue #${issue.data.number}`);
          }